
plugins {
    id("org.jetbrains.kotlin.jvm") version "1.6.10"
    id("net.researchgate.release") version "2.8.1"
    id("com.adarshr.test-logger") version "2.0.0"
    id("org.jetbrains.kotlin.plugin.spring") version "1.6.10"
    id("com.github.ben-manes.versions") version "0.28.0"
    id("se.patrikerdes.use-latest-versions") version "0.2.13"
    id("org.owasp.dependencycheck") version "5.3.2.1"
    id "org.openrepose.gradle.plugins.jaxb" version "2.5.0"
    id("maven-publish")

}

group = "no.nav.eessi.pensjon"

java {
    withJavadocJar()
    withSourcesJar()
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "11"
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "11"
    }
}

configurations {
    xsd
}

repositories {
    mavenCentral()
}

dependencies {

    // Spring-boot
    implementation("org.springframework.boot:spring-boot-starter-web:2.6.2") {
        exclude module: 'tomcat-embed-core'
    }
    implementation("org.springframework:spring-web:5.3.+")
    implementation("org.springframework:spring-context:5.3.+")

    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.10")
    implementation("ch.qos.logback:logback-classic:1.2.4")
    implementation("io.micrometer:micrometer-registry-prometheus:1.4.2")

    implementation("no.nav.eessi.pensjon:ep-security-sts:0.0.21")
    implementation("no.nav.eessi.pensjon:ep-metrics:0.4.14")
    implementation("no.nav.eessi.pensjon:ep-logging:1.0.15")
    //OIDC
    implementation("no.nav.security:token-validation-spring:1.3.8")
    implementation("no.nav.security:token-validation-jaxrs:1.3.8")
    implementation("no.nav.security:token-client-spring:1.3.8")

    implementation("com.sun.xml.ws:jaxws-ri:2.3.2")
    jaxb ('org.glassfish.jaxb:jaxb-xjc:2.3.2')
    jaxb ('org.glassfish.jaxb:jaxb-runtime:2.3.2')


//    compileOnly("javax.servlet:javax.servlet-api:4.0.1")


    //Jackson json
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.10.1")

    xsd("no.nav.tjenestespesifikasjoner:pensjonsinformasjon-v1-tjenestespesifikasjon:1.2021.01.21-11.34-02f5eb27bb76")

    testImplementation("javax.servlet:javax.servlet-api:4.0.1")
    testImplementation("org.junit.platform:junit-platform-suite-api:1.7.1")
    testImplementation("org.mockito:mockito-junit-jupiter:3.2.4")
    testImplementation("org.springframework:spring-test:5.3.+")
    testImplementation("com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0")
    testImplementation("io.mockk:mockk:1.12.0")
    testImplementation("org.jetbrains.kotlin:kotlin-test:1.5.21") {
        exclude module: 'kotlin-test-js'
        exclude module: 'kotlin-test-testng'
    }

}

// https://github.com/researchgate/gradle-release
release {
    newVersionCommitMessage = "[Release Plugin] - next version commit: "
    tagTemplate = "release-\${version}"
}

// https://help.github.com/en/actions/language-and-framework-guides/publishing-java-packages-with-gradle#publishing-packages-to-github-packages
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/navikt/ep-personoppslag"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

test {
    useJUnitPlatform()
}

// Temporary - until these misplaced dirs are cleaned in all builds
processResources.doFirst {
    delete "${projectDir}/src/main/resources/schemas"
    delete "${projectDir}/src/main/resources/xsdtemp"
}

ext.xsdTemp = "${buildDir}/xsdtemp"
ext.schemasDir = "${buildDir}/schemas"
ext.xsdArtifactName = "pensjonsinformasjon-xsd.jar"

ext.pensjonsinformasjonDir = "${schemasDir}"

task copyPensjonsinformasjonXsd(type: Copy) {
    from(configurations.xsd) {
        rename '^pensjonsinformasjon.*', 'pensjonsinformasjon-xsd.jar'
    }
    into xsdTemp
}

task copyPensjonsinformasjonXsdsFromArtifacts(type: Copy) {
    with copyPensjonsinformasjonXsd
    includeEmptyDirs = false
    from zipTree( xsdTemp + "/" + xsdArtifactName)
    include '**/*.xsd'
    into pensjonsinformasjonDir
}

jaxb {
    xsdDir = pensjonsinformasjonDir
}

copyPensjonsinformasjonXsdsFromArtifacts.dependsOn tasks["copyPensjonsinformasjonXsd"]
xjc.dependsOn tasks["copyPensjonsinformasjonXsdsFromArtifacts"]
compileKotlin.dependsOn tasks["xjc"]

sourceSets["main"].resources.srcDir(schemasDir)
sourceSets["main"].java.srcDir("${buildDir}/generated-sources/xjc")

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

repositories {
    mavenCentral()

    ["maven-release","ep-personoppslag","tjenestespesifikasjoner","ep-metrics"].each { repo ->
        String token = System.getenv("GITHUB_TOKEN") ?: project.findProperty("gpr.key")
        if (!token) throw new NullPointerException("Missing token, you have to set GITHUB_TOKEN or gpr.key, see README")
        maven {
            url = uri("https://maven.pkg.github.com/navikt/$repo")
            credentials {
                username = "token"
                password = token
            }
        }
    }
}

/* https://github.com/ben-manes/gradle-versions-plugin */
dependencyUpdates {
    rejectVersionIf {
        ['alpha', 'beta', 'b', 'rc', 'cr', 'm', 'preview', 'pr']
                .any { qualifier -> it.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/}
    }
    revision = 'release'
}